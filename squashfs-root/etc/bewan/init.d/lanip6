#!/bin/sh
# /etc/bewan/init.d/lanip6 $1 $2
# $1 or $ARG = start stop restart
# $2 or $LANID = action for lanid

if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

LANID=${LANID:-}
if [ "$LANID" = '' ]; then
  LANID=${2:-}
fi

. /etc/bewan/lib/lan

check_lanip6() {
  local intfs en i
  eval intfs=\${$landev'_IP6Interface_List'}

  en=0
  for i in `strip $intfs`; do
    eval en=\${$landev'_IP6Interface_'$i'_Enable'}
    [ "$en" = 1 ] && break
  done

  # Sanity check
  local enable="test -f $IP6ENABLE -a x$en = x1"
  local active="test -d $LAND/$LANID/ip6"
  base_check_arg "$enable" "$active"
}

stop_lanip6() {
  local ARG
  # Shutdown DHCP server for $LANID, $IFNAME
  ARG=stop
  base_call_initd 'landhcp6 lanradvd'

  base_call_scripts 'ip-down6-static'

  # Remove IP interfaces for IFNAME
  sysctl -w net.ipv6.conf.$IFNAME.disable_ipv6=1 2>&1 >/dev/null
  ip -6 addr flush dev $IFNAME

  # Remove IP information
  rm -rf $LAND/$LANID/ip6
}

start_lanip6() {
  local landev intfs en i
  local iptype ipaddr
  local wan=0 static=0

  rm -f $LAND/$LANID/ip6/lladdr

  # Create ip6 directory and add IPv6 addresses
  landev='LANDevice_'$LANID
  eval intfs=\${$landev'_IP6Interface_List'}

  for i in `strip $intfs`; do
    eval en=\${$landev'_IP6Interface_'$i'_Enable'}
    [ "$en" != 1 ] && continue

    eval iptype=\${$landev'_IP6Interface_'$i'_AddressingType'}
    eval ipaddr=\${$landev'_IP6Interface_'$i'_IPAddress'}
    eval prefix=\${$landev'_IP6Interface_'$i'_Prefix'}
    eval prefixlen=\${$landev'_IP6Interface_'$i'_PrefixLen'}

    [ "$ipaddr" = "" ] && iptype='WAN'
    [ "$prefixlen" = "" ] && prefixlen=128

    if [ "$iptype" = 'Static' ] && [ "$wan" = 0 ]; then
      mkdir -p $LAND/$LANID/ip6
      # Yes this is really stupid, but if an interface has no ipv6 addr
      # then I can't enable ipv6 ... yet this ipv6 addr won't be assigned
      # so call it twice.
      add_ipv6_linklocal $IFNAME
      sysctl -w net.ipv6.conf.$IFNAME.disable_ipv6=0 2>&1 >/dev/null
      add_ipv6_linklocal $IFNAME
      get_ipv6_linklocal $IFNAME > $LAND/$LANID/ip6/lladdr
      echo "$IFNAME" > $LAND/$LANID/ip6/ifname

      if [ "$static" = 0 ]; then

        # Call ip-up6-static script with relevant arguments
        IPADDR=$ipaddr PREFIX=$prefix/$prefixlen ROUTERS='' SERVERS=''
        base_call_scripts 'ip-up6-static'

      else
        ip -6 addr add dev $IFNAME $ipaddr/$prefixlen
      fi

      static=1
    fi
    if [ "$iptype" = 'WAN' ] && [ "$static" = 0 ] && [ "$wan" = 0 ] && [ -f $INTFD/$IFNAME/assocwan ]; then
      mkdir -p $LAND/$LANID/ip6
      # Yes this is really stupid, but if an interface has no ipv6 addr
      # then I can't enable ipv6 ... yet this ipv6 addr won't be assigned
      # so call it twice.
      add_ipv6_linklocal $IFNAME
      sysctl -w net.ipv6.conf.$IFNAME.disable_ipv6=0 2>&1 >/dev/null
      add_ipv6_linklocal $IFNAME
      local lladdr; lladdr=`get_ipv6_linklocal $IFNAME`
      echo "$lladdr" > $LAND/$LANID/ip6/lladdr
      echo "$IFNAME" > $LAND/$LANID/ip6/ifname
      local localaddr=''

      local WANID=`cat $INTFD/$IFNAME/assocwan`
      local dprefix=`cat $WAND/$WANID/ip6/dprefix`
      [ -f $WAND/$WANID/ip6/servers ] && cp -f $WAND/$WANID/ip6/servers $LAND/$LANID/ip6/servers

      local over; eval over=\${$landev'_IP6Interface_'$i'_Override_LocalAddr':-}
      [ "$over" != '' ] && localaddr=$over || localaddr="$(getlocalpart ${lladdr%%/*} ${lladdr##*/})"

      local prefix=${dprefix%%/*}
      # We might want to split the delegated prefix in smaller subnets.
      # So, we use prefixoff to compute this interface prefix.
      local prefixoff; eval prefixoff=\${$landev'_IP6Interface_'$i'_Override_PrefixOffset':-}
      if [ "$prefixoff" != '' ]; then
        prefix=`addipv6addr $prefix $prefixoff`
      fi

      local prefixlen; eval prefixlen=\${$landev'_IP6Interface_'$i'_Override_PrefixLen':-}
      [ "$prefixlen" = '' ] && prefixlen=${dprefix##*/}

      local usewan; eval usewan=\${$landev'_IP6Interface_'$i'_UseWanAddr':-}
      if [ "$usewan" = 1 ]; then
        ipaddr=`cat $WAND/$WANID/ip6/ipaddr`
      else
        ipaddr=`addipv6addr $prefix $localaddr`
      fi
      if [ -z "$ipaddr" ]; then
        base_log "$IFNAME: could not compute an ip address" debug
        return
      fi

      # Call ip-up6-static script with relevant arguments
      IPADDR=$ipaddr PREFIX=$prefix/$prefixlen ROUTERS='' SERVERS=''
      base_call_scripts 'ip-up6-static'
      wan=1
    fi
  done

  # Set up DHCP for LANID
  local ARG=start
  base_call_initd 'landhcp6 lanradvd'
}

main_lanip6() {
  eval $PUSH_ARG

  [ ! -d $DHCP6D ] && mkdir -p $DHCP6D
  [ ! -d $RADVDD ] && mkdir -p $RADVDD

  local IFNAME=`cat $LAND/$LANID/ifname 2>/dev/null`
  local landev='LANDevice_'$LANID

  check_lanip6
  base_log "$INITD/lanip6 $ARG $LANID" debug


  case $ARG in
  stop)
    stop_lanip6
    ;;
  start)
    start_lanip6
    ;;
  restart)
    # Restart ip6 interface if wan is up
    if [ -f $INTFD/$IFNAME/assocwan ]; then
      stop_lanip6
      start_lanip6
    else
      # assocwan does not exist,
      # => tell our radvd that we are not router anymore
      # and deprecate our prefix
      local ARG=restart
      base_call_initd 'lanradvd'
    fi
    ;;
  esac
}

main_lanip6
