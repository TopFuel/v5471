#!/bin/sh
# /etc/bewan/init.d/cron $1
# $1 or $ARG = start stop restart

if [ "${ARG:-}" = "" ]; then
  . /etc/bewan/init.d/setparam
fi

update_cron_config() {
  local tmpfile='/tmp/crontab'
  # Gather dynamic tasks
  cat $dir/* 2>/dev/null >$tmpfile

  local task
  # Gather static tasks
  for task in `strip $Services_Cron_StaticTable_List`; do
    local field="Services_Cron_StaticTable_$task"
    local enable; eval enable=\${$field'_Enable'}
    [ "$enable" != 1 ] && continue
    local timespec; eval timespec=\${$field'_TimeSpec'}
    [ "$timespec" = '' ] && continue
    local command; eval command=\${$field'_Command'}
    [ "$command" = '' ] && continue
    echo "$timespec $command" >>$tmpfile
  done

  crontab $tmpfile
  rm -f $tmpfile
}

check_cron() {
  if [ ! -e /usr/sbin/crond ] || [ ! -e /usr/bin/crontab ]; then
    ARG=nothing
    return
  fi
  local enable="test x$Services_Cron_Enable = x1"
  local active="base_exist_daemon $daemon"
  base_check_arg "$enable" "$active"
}

start_cron() {
  mkdir -p $dir
  mkdir -p $spool
  touch $spool/root

  update_cron_config
  local log=${Services_Cron_LogLevel:-8}
  local cmd="/usr/sbin/crond -f -S -l $log"
  base_add_daemon $daemon "$cmd"
}

stop_cron() {
	local pid="`cat /var/run/$daemon.pid 2>/dev/null`"
	base_kill_daemon "$daemon" "$pid"
}

restart_cron() {
  update_cron_config
}

main_cron() {
  eval $PUSH_ARG

  local dir='/var/bewan/cron.d'
  local spool='/var/spool/cron/crontabs'

  local daemon='crond'
  local pidfile="/var/run/$daemon.pid"

  check_cron
  base_log "$INITD/cron $ARG" debug

  case $ARG in
  stop)
    stop_cron
    ;;
  start)
    start_cron
    ;;
  restart)
    restart_cron
    ;;
  esac
}

main_cron
