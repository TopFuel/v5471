#!/bin/sh
# /etc/bewan/init.d/6rd $1 $2
# $1 or $ARG = start stop restart
# $2 or $WANID = action for wanid

if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

WANID=${WANID:-}
if [ "$WANID" = '' ]; then
  WANID=${2:-}
fi

. /etc/bewan/lib/wan

# Sanity check
check_6rd() {
  if [ ! -d $WAND/$WANID/ip -o ! -d $WAND/$WANID/ip6 ]; then
    ARG=nothing
    return
  fi
  eval en=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_Enable':-0}
  eval iptype=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_AddressingType':-None}

  # If ipv6cp is enabled, stop right now
  if [ "$iptype" = '6rd' -a -f $WAND/$WANID/ipv6cp ]; then
    base_log "$0: wan $WANID is configured as 6rd, yet IPv6CP has been enabled" debug
    ARG=nothing
    return
  fi

  local enable="test -f $IP6ENABLE -a x$en = x1 -a x$iptype = x6rd"
  local active="test -f $WAND/$WANID/ip/tunnel"
  base_check_arg "$enable" "$active"
}

stop_6rd() {
  IFNAME=`cat $WAND/$WANID/ip/tunnel`

  base_call_scripts 'ip-down6'
  ip tunnel del $IFNAME
  rm -f $WAND/$WANID/ip/tunnel
}

start_6rd() {
  eval localip=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_Tunnel6rd_IP4Source'}
  eval localipmask=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_Tunnel6rd_IP4SourceMaskLen':-0}
  eval remoteip=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_Tunnel6rd_IP4Destination'}
  eval localip6=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_Tunnel6rd_IP6Source'}
  eval prefix=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_Tunnel6rd_IP6Prefix'}
  eval prefixlen=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_Tunnel6rd_IP6PrefixLen'}
  eval remoteip6=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_Tunnel6rd_IP6Destination'}
  eval assoclan=\${'WANConnectionDevice_'$WANID'_WANIP6Connection_AssociatedLAN'}

  # If nothing specified, use wan ip address
  [ -z "${localip}" ] && localip=`cat $WAND/$WANID/ip/ipaddr`
  [ -z "${localip}" ] && return
  # No prefix ...
  [ -z "${prefix}" ] && return
  [ -z "${prefixlen}" ] && return

  [ -z "${remoteip}" ] && return
  # FIXME: Only use the first address
  isip $remoteip || {
    # Try to resolve on this wan if we have a configuration, else use local resolver
    local dnsoption=''
    local dnslist=''
    [ -f $WAND/$WANID/ip/ifname ] && [ -f $WAND/$WANID/ip/dnssrvlst ] && {
      dnsoption="-i $(cat $WAND/$WANID/ip/ifname)"
      dnslist="$(cat $WAND/$WANID/ip/dnssrvlst)"
      if [ -z "$dnslist" ]; then
        base_log "$0: Error. No DNS servers" debug
        return
      fi
    }
    hostname=$remoteip
    try=0
    while [ "$try" -lt 5 ]; do
      remoteip=`nslookup -4 -q $dnsoption $hostname $dnslist`
      isip $remoteip && break
      try=$(($try + 1))
      base_log "$0: can't resolv $hostname for 6rd" debug
      sleep 1
    done
    if [ "$try" -ge 5 ]; then
      base_log "$0: could not resolv $hostname" debug
      return
    fi
  }
  isip $remoteip || return

  # Ok, first compute 6rd delegated prefix
  prefixpart=`getprefixpart $prefix $prefixlen`
  [ -z "$prefixpart" ] && return
  dprefix=`6rdprefix $localip $localipmask $prefix $prefixlen`
  [ -z "$dprefix" ] && return
  dprefixlen=${dprefix##*/}
  dprefixpart=`getprefixpart ${dprefix%%/*} $dprefixlen`

  # Now if nothing in cli, find what is our local address
  [ -z "$localip6" ] && {
    ifname=`cat $WAND/$WANID/ifname`
    localip6=`get_ipv6_linklocal $ifname`
    localip6=${localip6%%/*}
  }
  [ -z "$localip6" ] && {
    localip6=::1
  }

  # Compute global address
  localip6_conv=`getlocalpart $localip6 $dprefixlen`
  localip6=`addipv6addr $dprefixpart $localip6_conv`
  [ -z "${localip6}" ] && return
  [ -z "${remoteip6}" ] && remoteip6="::$remoteip"

  IFNAME=6rd$WANID
  ip tunnel add $IFNAME mode sit local $localip remote $remoteip ttl 64 || return
  ip tunnel 6rd dev $IFNAME 6rd-prefix $prefix/$prefixlen || return
  sysctl -w net.ipv6.conf.$IFNAME.disable_ipv6=0
  ip -6 addr add $localip6 dev $IFNAME || return
  ip link set $IFNAME up || return

  echo $IFNAME > $WAND/$WANID/ip/tunnel
  echo $IFNAME > $WAND/$WANID/ip6/ifname
  echo $IFNAME > $WAND/$WANID/ip6name
  mkdir -p $INTFD/$IFNAME
  echo $assoclan > $INTFD/$IFNAME/assoclan
  for lanid in $assoclan; do
    lanif=`cat $LAND/$lanid/ifname`
    [ -z "$lanif" ] && continue
    echo $WANID > $INTFD/$lanif/assocwan
  done

  IPADDR=$localip6
  IPREMOTE=''
  PREFIX=''
  DPREFIX=$dprefix
  ROUTERS=''
  DHCPSRV=''
  SERVERS=''

  ifname=`cat $WAND/$WANID/ip/ifname`
  base_log "$INITD/6rd $IFNAME $ifname $IPADDR dprefix $dprefix" debug
  base_call_scripts 'ip-up6'
}

main_6rd() {
  eval $PUSH_ARG

  check_6rd
  base_log "$INITD/6rd $ARG $WANID" debug

  case $ARG in
  stop)
    stop_6rd
    ;;
  start)
    start_6rd
    ;;
  restart)
    stop_6rd
    start_6rd
   ;;
  esac
}

main_6rd
