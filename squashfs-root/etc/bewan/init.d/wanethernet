#!/bin/sh
# /etc/bewan/init.d/ethernet $1 $2
# $1 or $ARG = start stop restart
# $2 or $ETHID = ethernet interface index


if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

ETHID=${ETHID:-}
if [ "$ETHID" = '' ]; then
  ETHID=${2:-all}
fi

# Sanity check
check_wanethernet() {
  if [ "$ifname" = '' ]; then
    ARG=nothing
    return
  fi
  local enable="test x$en = x1 -a -f $WANETHD/wanethup_$ETHID"
  local active="test -d $INTFD/$ifname"
  base_check_arg "$enable" "$active"
}

stop_wanethernet() {
  # Destroy VLAN interfaces
  base_call_initd 'vlan_interface'

  # Switch configuration for WAN port
  base_call_initd 'switch_wan_port'

  # Stop possible associated WAN
  if [ "$TOP_ARG" = restart ] && [ -f /etc/bewan/lib/wan ]; then
    . /etc/bewan/lib/wan
    stop_wan_from_physical_interface $ifname
  fi

  # Stop interface
  base_call_initd 'interface'
}

start_wanethernet() {
  # Switch configuration for WAN port
  base_call_initd 'switch_wan_port'

  # Create VLAN interfaces
  base_call_initd 'interface vlan_interface'

  # Start possible associated WAN
  if [ "$TOP_ARG" = restart ] && [ -f /etc/bewan/lib/wan ]; then
    . /etc/bewan/lib/wan
    start_wan_from_physical_interface $IFTYPE $ETHID
  fi
}

restart_ethled() {

  if [ "$TOP_ARG" = restart ]; then
    local ARG=restart
    base_call_initd 'ethled'
  fi
}

if [ "$ETHID" = 'all' ]; then
  # Call script on each interface
  ETHID=0; while [ $ETHID -lt ${WANEthernetInterface_Count:-0} ]; do
    ETHID=$(($ETHID + 1))
    base_call_initd 'wanethernet'
  done

  ETHID='all'
  return
fi

main_wanethernet() {
  eval $PUSH_ARG

  local IFTYPE='WANEthernetInterface'
  local en; eval en=\${$IFTYPE'_'$ETHID'_Enable':-0}
  local ifname; eval ifname=\${$IFTYPE'_'$ETHID'_Ifname':-}

  check_wanethernet
  base_log "$INITD/wanethernet $ARG $ETHID" debug

  case $ARG in
  stop)
    stop_wanethernet
    restart_ethled
    ;;
  start)
    start_wanethernet
    restart_ethled
    ;;
  restart)
    stop_wanethernet
    start_wanethernet
    restart_ethled
    ;;
  esac
}

main_wanethernet
