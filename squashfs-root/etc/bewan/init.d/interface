#!/bin/sh
# /etc/init.d/interface $1 $2 $3
# $1 or $ARG = start stop restart
# $2 Interface type = LANEthernetInterface, LANUSBInterface, ATMEthernetInterface, PTMEthernetInterface, CMEthernetInterface, WANConnectionDevice
# $3 or $ETHID = interface index

if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

IFTYPE=${IFTYPE:-}
if [ "$IFTYPE" = '' ]; then
  IFTYPE=${2:-}
fi

ETHID=${ETHID:-}
if [ "$ETHID" = '' ]; then
  ETHID=${3:-}
fi

# Sanity check
check_interface() {
  if [ "$ifname" = '' ]; then
    ARG=nothing
    return
  fi
  local enable="test x$en = x1"
  local active="test -d $INTFD/$ifname"
  base_check_arg "$enable" "$active"
}

stop_interface() {  

  ifconfig $ifname down
  rm -rf $INTFD/$ifname
}

start_interface() {
  mkdir -p $INTFD/$ifname

  local maccmd=''
  local ifpar='txqueuelen 100'

  if [ "$IFTYPE" = 'WANConnectionDevice' ]; then
    if [ -f $WAND/$ETHID/brctl ]; then
      # Keep bridge interface MAC address
      maccmd=''
    else
      # Set ethmux interface MAC address
      maccmd='pzinfo wanmac'
    fi
    # Enable/Disable multicast on WAN interface
    local mcast; eval mcast=\${$intf'_Multicast'}
    [ "$mcast" != 1 ] && ifpar="multicast off $ifpar"
  elif [ "$IFTYPE" = 'LANEthernetInterface' ]; then
    # For LAN interfaces, get MAC address from pagezero lanmac
    maccmd='pzinfo lanmac'
  else
    # For WAN interfaces, get MAC address from pagezero wanmac
    maccmd='pzinfo wanmac'
  fi

  # Program MAC address
  # ===================
  local macoff; eval macoff=\${$intf'_MacOffset':-0}
  [ "$macoff" = '' ] && macoff=0
  local override; eval override=\${$intf'_MACAddressOverride':-0}
  local omacaddr; eval omacaddr=\${$intf'_MACAddress':-}
  # Override MAC address with config parameter
  if [ "$override" = 1 ] && [ "$omacaddr" != '' ]; then
    macaddr="$omacaddr"
  # Get MAC address from page zero and apply an offset
  elif [ "$maccmd" != '' ]; then
    macaddr=`$maccmd`
    macaddr=`macoffset $macoff $macaddr`
  # Get already assigned MAC address
  else
    macaddr=`ifconfig $ifname | grep HWaddr | sed "s/.*HWaddr //"`
  fi
  # Apply parameter to interface with ifconfig
  echo $macaddr >$INTFD/$ifname/macaddr
  ip link set dev $ifname down
  ip link set dev $ifname address $macaddr $ifpar up
  # Remove ipv4 and/or ipv6 addresses
  ip addr flush dev $ifname
}

main_interface() {
  eval $PUSH_ARG

  local intf=$IFTYPE'_'$ETHID
  local en; eval en=\${$intf'_Enable':-0}
  local ifname; eval ifname=\${$intf'_Ifname':-}

  check_interface
  base_log "$INITD/interface $ARG $IFTYPE $ETHID" debug

  case $ARG in
  stop)
    stop_interface
    ;;
  start)
    start_interface
    ;;
  restart)
    stop_interface
    start_interface
    ;;
  esac
}

main_interface
