#!/bin/sh
# /etc/bewan/init.d/adddnsmasq $1 $2
# $1 or $ARG = start stop restart
# $2 or DNSMASQ_ID = index

if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

DNSMASQ_ID=${DNSMASQ_ID:-}
if [ "$DNSMASQ_ID" = '' ]; then
  DNSMASQ_ID=${2:-}
fi

check_adddnsmasq() {
  if [ ! -f /sbin/dnsmasq ]; then
    ARG=nothing
    return
  fi
  local enable="test x$enable = x1 -a x$port != x"
  local active="base_exist_daemon $daemon"
  base_check_arg "$enable" "$active"
}

stop_adddnsmasq() {
  local pid=`cat $daemon_pid 2>/dev/null`
  base_kill_daemon $daemon "$pid"
  rm -f $conf_file
}

start_adddnsmasq() {
  local logv; eval logv=\${$fd'_LogQueries'}
  local drdv; eval drdv=\${$fd'_DnsRedirect'}
  local bogv; eval bogv=\${$fd'_RemoveDnsRedirectFrom'}
  local csize; eval csize=\${$fd'_CacheSize':-0}

  local log='#'; [ "$logv" = 1 ] && log=''
  local drd='#'; [ "$drdv" = 1 ] && drd=''
  local bog='';  [ "$bogv" != '' ] && bog="bogus-nxdomain=$bogv"

  cat <<EOF >$conf_file
keep-in-foreground
port=$port
filterwin2k
bogus-priv
$log log-queries
user=root
pid-file=$daemon_pid
resolv-file=$resolv_file
cache-size=$csize
$drd dns-redirect
$bog
EOF

  local cmd="/sbin/dnsmasq -C $conf_file"
  base_add_daemon $daemon "$cmd"
}

main_adddnsmasq() {
  eval $PUSH_ARG

  local daemon="dnsmasq-$DNSMASQ_ID"
  local daemon_pid="/var/run/$daemon.pid"
  local conf_file="/var/bewan/dnsmasq-$DNSMASQ_ID.conf"
  local resolv_file="/var/bewan/resolv-$DNSMASQ_ID.conf"

  local fd='Services_AddDnsForwarder_'$DNSMASQ_ID
  local enable; eval enable=\${$fd'_Enable':-0}
  local port; eval port=\${$fd'_Port':-}

  check_adddnsmasq
  base_log "$INITD/adddnsmasq $ARG $DNSMASQ_ID" debug

  case $ARG in
  stop)
    stop_adddnsmasq
    ;;
  start)
    start_adddnsmasq
    ;;
  restart)
    stop_adddnsmasq
    start_adddnsmasq
    ;;
  esac
}

# Start all additional DNS forwarder daemons
if [ "$DNSMASQ_ID" = 'all' ] && ( [ $ARG = start ] || [ $ARG = stop ] ); then

  for DNSMASQ_ID in `strip ${Services_AddDnsForwarder_List:-}`; do
    base_call_initd 'adddnsmasq'
  done

  DNSMASQ_ID='all'
  return
fi

main_adddnsmasq
