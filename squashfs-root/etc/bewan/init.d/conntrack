#!/bin/sh
# /etc/bewan/init.d/conntrack $1
# $1 or $ARG = start stop restart

if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

set_conntrack_max_entries() {
	# Conntrack max buckets
	local max_entries=${Conntrack_MaxEntries:-0}

	if [ ${max_entries} -ne 0 ] && [ -f /proc/sys/net/nf_conntrack_max ]; then
		echo ${max_entries} > /proc/sys/net/nf_conntrack_max
	fi
}

set_nf_tcp_timeout() {
	# Netfilter TCP timeout value
	local tcp_timeout=${Conntrack_TCPTimeout:-0}

	if [ ${tcp_timeout} -ne 0 ] && [ -f /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_established ]; then
		echo ${tcp_timeout} > /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_established
	fi
}

set_nf_udp_timeout() {
	# Netfilter UDP timeout value
	local udp_timeout=${Conntrack_UDPTimeout:-0}
	local udp_timeout_stream=${Conntrack_UDPTimeoutStream:-0}

	if [ ${udp_timeout} -ne 0 ] && [ -f /proc/sys/net/ipv4/netfilter/ip_conntrack_udp_timeout ]; then
		echo ${udp_timeout} > /proc/sys/net/ipv4/netfilter/ip_conntrack_udp_timeout
	fi
	
	if [ ${udp_timeout_stream} -ne 0 ] && [ -f /proc/sys/net/ipv4/netfilter/ip_conntrack_udp_timeout_stream ]; then
		echo ${udp_timeout_stream} > /proc/sys/net/ipv4/netfilter/ip_conntrack_udp_timeout_stream
	fi
}

set_performance_parameter() {

	local tcp_fin_timeout=${Conntrack_TCPFinTimeout:-0}
	local tcp_keepalive_time=${Conntrack_TCPKeepAliveTime:-0}
	local tcp_window_scaling=${Conntrack_TCPWindowScaling:-1}
	local tcp_sack=${Conntrack_TCPSack:-1}
	local bucket_size=${Conntrack_BucketSize:-0}
	local max_expectEntries=${Conntrack_MaxExpectEntries:-0}

	local tcp_timeout_finwait=${Conntrack_TCPTimeoutFinWait:-0}
	local tcp_timeout_closewait=${Conntrack_TCPTimeoutCloseWait:-0}

	if [ ${tcp_fin_timeout} -ne 0 ] && [ -f /proc/sys/net/ipv4/tcp_fin_timeout ]; then
		echo ${tcp_fin_timeout} > /proc/sys/net/ipv4/tcp_fin_timeout
	fi
	
	if [ ${tcp_keepalive_time} -ne 0 ] && [ -f /proc/sys/net/ipv4/tcp_keepalive_time ]; then
		echo ${tcp_keepalive_time} > /proc/sys/net/ipv4/tcp_keepalive_time
	fi

	if [ ${tcp_window_scaling} -eq 0 ] || [ ${tcp_window_scaling} -eq 1 ]; then
		if [ -f /proc/sys/net/ipv4/tcp_window_scaling ]; then
			echo ${tcp_window_scaling} > /proc/sys/net/ipv4/tcp_window_scaling
		fi
	fi

	if [ ${tcp_sack} -eq 0 ] || [ ${tcp_sack} -eq 1 ]; then
		if [ -f /proc/sys/net/ipv4/tcp_sack ]; then
			echo ${tcp_sack} > /proc/sys/net/ipv4/tcp_sack
		fi
	fi

	#These parameter values are half of the default values to improve NAT table entry 
	#management
	if [ ${tcp_timeout_finwait} -ne 0 ] && 
		[ -f /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_fin_wait ]; then
		echo ${tcp_timeout_finwait} > /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_fin_wait
	fi 

	if [ ${tcp_timeout_closewait} -ne 0 ] &&
		[ -f /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_close_wait ]; then
		echo ${tcp_timeout_closewait} > /proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_close_wait
	fi

	#This is to avoid expect table full in case of too many unicast traffic where expectations increases 
	#a lot
	if [ ${max_expectEntries} -ne 0 ] &&
		[ -f /proc/sys/net/netfilter/nf_conntrack_expect_max ]; then
		echo ${max_expectEntries} > /proc/sys/net/netfilter/nf_conntrack_expect_max
	fi

	if [ ${bucket_size} -ne 0 ] &&
		[ -f /sys/module/nf_conntrack/parameters/hashsize ]; then
		echo ${bucket_size} > /sys/module/nf_conntrack/parameters/hashsize
	fi
}

main_conntrack() {
	eval $PUSH_ARG
 	base_log "$INITD/conntrack $ARG" debug  

	set_conntrack_max_entries
	set_nf_tcp_timeout
	set_nf_udp_timeout

	#This is to improve NAT connection pool performance
	set_performance_parameter
}

main_conntrack
