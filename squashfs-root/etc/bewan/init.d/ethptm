#!/bin/sh
# /etc/bewan/init.d/ethptm $1 $2
# $1 or $ARG = start stop restart
# $2 or $ETHID = ethernet interface index


if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

. /etc/bewan/lib/ethptm

ETHID=${ETHID:-}
if [ "$ETHID" = '' ]; then
  ETHID=${2:-0}
fi

# Sanity check
check_ethptm() {
  if [ "$ifname" = '' ]; then
    ARG=nothing
    return
  fi
  if ! check_vendor_ethptm; then
    ARG=nothing
    return
  fi
  local dsl=${WANDSLInterfaceConfig_Enable:-0}
  local enable="test x$en = x1 -a x$dsl = x1 -a -f $DSLD/xdslup"
  local active="test -d $INTFD/$ifname"
  base_check_arg "$enable" "$active"
}

stop_ethptm() {

  # Stop all associated WANs
  if [ "$TOP_ARG" = restart ] && [ -f /etc/bewan/lib/wan ]; then
    . /etc/bewan/lib/wan
    stop_wan_from_physical_interface $ifname
  fi

  # Unconfigure network interface
  base_call_initd 'vlan_interface interface'
  # Destroy PTM interface
  stop_vendor_ethptm

  rm -rf $PTMD/$ifname
}

start_ethptm() {
  mkdir -p $PTMD/$ifname

  # Create PTM interface
  start_vendor_ethptm
  # Configure network interface
  base_call_initd 'interface vlan_interface'

  # Start all associated WANs
  if [ "$TOP_ARG" = restart ] && [ -f /etc/bewan/lib/wan ]; then
    . /etc/bewan/lib/wan
    start_wan_from_physical_interface $IFTYPE $ETHID
  fi
}

if [ "$ETHID" = 'all' ]; then

  # Start all interfaces
  ETHID=0; while [ $ETHID -lt ${PTMEthernetInterface_Count:-0} ]; do
    ETHID=$(($ETHID + 1))
    base_call_initd 'ethptm'
  done

  ETHID='all'
  return
fi

main_ethptm() {
  eval $PUSH_ARG

  local IFTYPE='PTMEthernetInterface'
  local en; eval en=\${$IFTYPE'_'$ETHID'_Enable':-0}
  local ifname; eval ifname=\${$IFTYPE'_'$ETHID'_Ifname':-}

  check_ethptm
  base_log "$INITD/ethptm $ARG $ETHID" debug

  case $ARG in
  stop)
    stop_ethptm
    ;;
  start)
    start_ethptm
    ;;
  restart)
    stop_ethptm
    start_ethptm
    ;;
  esac
}

main_ethptm
