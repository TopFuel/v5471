#!/bin/sh
# /etc/bewan/init.d/vlan_interface $1 $2 $3
# $1 or $ARG = start stop restart
# $2 or $IFTYPE = interface type, LANEthernetInterface, WANEthernetInterface, ATMEthernetInterface or PTMEthernetInterface
# $3 or $ETHID = interface index
# $4 or $VLANID = vlan interface index

if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

IFTYPE=${IFTYPE:-}
if [ "$IFTYPE" = '' ]; then
  IFTYPE=${2:-}
fi

ETHID=${ETHID:-}
if [ "$ETHID" = '' ]; then
  ETHID=${3:-}
fi

VLANID=${VLANID:-}
if [ "$VLANID" = '' ]; then
  VLANID=${4:-all}
fi

. /etc/bewan/lib/vlan

# Sanity check
check_vlan_interface() {

  if ! which ${vlan_utility:-} >/dev/null; then
    ARG=nothing
    return
  fi
  if [ "$ifname" = '' ]; then
    ARG=nothing
    return
  fi
  local enable="test x$en = x1 -a x$vlanen = x1 -a -d $INTFD/$ifname"
  local active="test -f $INTFD/$ifname/vlan$VLANID"
  base_check_arg "$enable" "$active"
}

stop_vlan_interface() {  

  # Retrieve network interface name
  local netif=`cat $INTFD/$ifname/vlan$VLANID`
  [ "$netif" = '' ] && return

  if [ "$TOP_ARG" = restart ]; then
    # Remove interface from lan bridge
    if [ -f /etc/bewan/lib/lan ]; then
      . /etc/bewan/lib/lan
      remove_interface_from_lan_bridge $netif
    fi
    # Stop possible associated WAN
    if [ -f /etc/bewan/lib/wan ]; then
      . /etc/bewan/lib/wan
      stop_wan_from_physical_interface $netif
    fi
  fi

  # Remove VLAN
  vlan_remove $netif
  rm -rf $INTFD/$netif
  rm -f $INTFD/$ifname/vlan$VLANID
}

start_vlan_interface() {

  # Create VLAN Interfaces
  local en; eval en=\${$vintf'_'$VLANID'_Enable'}
  [ "$en" != 1 ] && return

  local vid; eval vid=\${$vintf'_'$VLANID'_VID'}
  [ "$vid" = '' ] && return
  local netif="$ifname.$vid"
  mkdir -p $INTFD/$netif
  echo $netif > $INTFD/$ifname/vlan$VLANID
  # Set Priority field according to PrioMap
  local priomap; eval priomap=\${$vintf'_'$VLANID'_PrioMap'}
  # Create VLAN network interface
  vlan_create $ifname $vid $priomap
  # Program VLAN interface MAC@
  local macoff; eval macoff=\${$vintf'_'$VLANID'_MacOffset'}
  # If no mac offset has been set, try to inherit from our parent
  [ "$macoff" = '' ] && eval macoff=\${${IFTYPE}'_'${ETHID}'_MacOffset':-}
  [ "$macoff" = '' ] && macoff=0
  local macaddr=$(pzinfo lanmac)
  macaddr=$(macoffset $macoff $macaddr)
  echo $macaddr > $INTFD/$netif/macaddr
  # Change MAC address and brings-up interface
  ifconfig $netif down hw ether $macaddr 0.0.0.0

  if [ "$TOP_ARG" = restart ]; then
    # Start possible associated WAN
    if [ -f /etc/bewan/lib/wan ]; then
      . /etc/bewan/lib/wan
      start_wan_from_physical_interface $IFTYPE $ETHID $VLANID
    fi
  fi

  # Only for VLAN over LAN ethernet
  if [ "$IFTYPE" = 'LANEthernetInterface' ]; then
    if [ "$TOP_ARG" = restart ]; then
      local LANID=all
      base_call_initd 'lanif'
    fi
  fi
}

main_vlan_interface() {
  eval $PUSH_ARG

  local en; eval en=\${$IFTYPE'_'$ETHID'_Enable':-0}
  local ifname; eval ifname=\${$IFTYPE'_'$ETHID'_Ifname':-}
  local vintf="${IFTYPE}_${ETHID}_VLANInterface"
  local vlanen; eval vlanen=\${$vintf'_'$VLANID'_Enable':-0}
  local vlans

  check_vlan_interface
  base_log "$INITD/vlan_interface $ARG $IFTYPE $ETHID $VLANID" debug

  case $ARG in
  stop)
    stop_vlan_interface
    ;;
  start)
    start_vlan_interface
    ;;
  restart)
    stop_vlan_interface
    start_vlan_interface
    ;;
  esac
}

# Enable ethernet interfaces phys
if [ "$VLANID" = "all" ]; then
  local vintf="${IFTYPE}_${ETHID}_VLANInterface"
  local vlanlist
  eval vlanlist=\${$vintf'_List':-}
  for VLANID in `strip $vlanlist`; do
      base_call_initd 'vlan_interface'
  done
  VLANID=all
  return
fi

main_vlan_interface
