#!/bin/sh
# /etc/bewan/init.d/wanip6 $1 $2
# $1 or $ARG = start stop restart
# $2 or $WANID = action for wanid

if [ "${ARG:-}" = '' ]; then
  . /etc/bewan/init.d/setparam
fi

WANID=${WANID:-}
if [ "$WANID" = '' ]; then
  WANID=${2:-}
fi

. /etc/bewan/lib/wan

# Sanity check
check_wanip6() {
  if [ ! -d "$WAND/$WANID/ip6" ]; then
    ARG=nothing
    return
  fi
  local enable="test -f $IP6ENABLE -a -f $WAND/$WANID/wan_ip6"
  local active="test -f $WAND/$WANID/ip6name"
  base_check_arg "$enable" "$active"
}

stop_wanip6() {
  local ARG=stop
  local IFNAME=`cat $WAND/$WANID/ip6name`

  base_call_initd 'dhcp6client 6rd autoconfd'

  if [ -f $WAND/$WANID/ip6/staticip ]; then
    base_call_scripts 'ip-down6-static'
  fi

  # Remove IP interfaces for IFNAME and remove default routes
  sysctl -w net.ipv6.conf.$IFNAME.disable_ipv6=1 2>&1 >/dev/null
  ip -6 addr flush dev $IFNAME scope global
  [ ! -f $WAND/$WANID/wan_ppp -o ! -f $WAND/$WANID/ipv6cp ] && ip -6 addr flush dev $IFNAME scope link
  [ -f $WAND/$WANID/ip6/routers ] && {
    for router in strip `cat $WAND/$WANID/ip6/routers`; do
      ip -6 route del default via $router dev $IFNAME table default
    done
  }
  
  rm -f $WAND/$WANID/ip6name
  rm -f $WAND/$WANID/ip6/staticip $WAND/$WANID/ip6/autoconf $INTFD/$IFNAME/assoclan $WAND/$WANID/ip6/dnssel $WAND/$WANID/ip6/slaac
  rm -f $DHCP6CLIENTD/$IFNAME.conf $DHCP6CLIENTD/$IFNAME.duid
}

start_wanip6() {
  local ARG=start

  local ifname=`cat $WAND/$WANID/ifname`
  local wandev='WANConnectionDevice_'$WANID
  local iptype; eval iptype=\${$wandev'_WANIP6Connection_AddressingType'}

  # IPv6CP does not currently define ways to configure a link (public addresses, routes etc...).
  # So we use hybrid mode where ppp is only used to enable a link and DHCPv6 / SLAAC / static configuration
  # configures this link => we use in conjunction WANPPPConnection and WANIP6Connection.
  # Here, if wan_ppp is set, we want to have a look at pppname since it is placed by ppp-script when
  # link is brought up.
  if [ -f $WAND/$WANID/wan_ppp -a "$iptype" != '6rd' ]; then
    # We can't do anything if ipv6cp is not enabled
    [ ! -f $WAND/$WANID/ipv6cp ] && {
      base_log "$0 nothing to do, please enable ipv6cp" debug
      return
    }
    # If interface is not up, we can do nothing but stop right now
    # ppp-script will wake us
    [ ! -f $WAND/$WANID/pppname ] && return
    ifname=`cat $WAND/$WANID/pppname`
    # No link only address, so pppd still needs to negociate one.
    [ -z "$(get_ipv6_linklocal $ifname)" ] && return
  fi
  echo $ifname >$WAND/$WANID/ip6name
  echo $ifname >$WAND/$WANID/ip6/ifname
  rm -f $WAND/$WANID/ip6/staticip $WAND/$WANID/ip6/lladdr
  rm -f $WAND/$WANID/ip6/autoconf $WAND/$WANID/ip6/slaac
  rm -f $WAND/$WANID/ip6/dnssel
  rm -f $DHCP6CLIENTD/$ifname.conf $DHCP6CLIENTD/$ifname.duid

  # Set up IP interface and prepare autoconfd that triggers ip-up
  local assoclan; eval assoclan=\${$wandev'_WANIP6Connection_AssociatedLAN'}
  [ "$assoclan" != '' ] && echo $assoclan > $INTFD/$ifname/assoclan

  local dnssel; eval dnssel=\${$wandev'_WANIP6Connection_DNSSelection':-}
  [ "$dnssel" != '' ] && echo $dnssel > $WAND/$WANID/ip6/dnssel

  # Might be a better solution in the future to add a "SkipDefaultRouteCreation" in WANIP6Connection
  if [ "$iptype" = 'SLAAC' -o "$iptype" = 'SLAAC+DHCP' ]; then
    touch $WAND/$WANID/ip6/slaac
  fi

  # 'Static' and '6rd' modes are the only modes that do not use autoconfd
  if [ "$iptype" != 'Static' -a "$iptype" != '6rd' ]; then
    > $WAND/$WANID/ip6/autoconf
    local autoconf=''
    if [ "$iptype" != 'Other' ]; then
      autoconf="-m $iptype"
    fi

    local opts; local opt
    eval opts=\${$wandev'_WANIP6Connection_AutoconfOptions_KernelConfList':-}
    for opt in `strip $opts`; do
      autoconf="${autoconf} -k $opt"
    done
    eval opts=\${$wandev'_WANIP6Connection_AutoconfOptions_FlagList':-}
    for opt in `strip $opts`; do
      autoconf="${autoconf} -f $opt"
    done
    eval opts=\${$wandev'_WANIP6Connection_AutoconfOptions_OptFlagList':-}
    for opt in `strip $opts`; do
      autoconf="${autoconf} -o $opt"
    done
    eval opts=\${$wandev'_WANIP6Connection_AutoconfOptions_WatchList':-}
    for opt in `strip $opts`; do
      autoconf="${autoconf} -w $opt"
    done
    eval opt=\${$wandev'_WANIP6Connection_AutoconfOptions_Debug':-0}
    [ "$opt" != 0 ] && autoconf="${autoconf} -d $opt"

    echo "$autoconf" >> $WAND/$WANID/ip6/autoconf

    local IFNAME=$ifname
    base_call_initd 'autoconfd'
  fi

  if [ "$iptype" = 'Static' ]; then

    # Yes this is really stupid, but if an interface has no ipv6 addr
    # then I can't enable ipv6 ... yet this ipv6 addr won't be assigned
    # so call it twice.
    add_ipv6_linklocal $ifname
    sysctl -w net.ipv6.conf.$ifname.disable_ipv6=0 2>&1 >/dev/null
    add_ipv6_linklocal $ifname
    get_ipv6_linklocal $ifname > $WAND/$WANID/ip6/lladdr

    touch $WAND/$WANID/ip6/staticip
    local ipaddr; eval ipaddr=\${$wandev'_WANIP6Connection_IPAddress'}
    local prefix; eval prefix=\${$wandev'_WANIP6Connection_Prefix'}
    local prefixlen; eval prefixlen=\${$wandev'_WANIP6Connection_PrefixLen':-128}
    local routers; eval routers=\${$wandev'_WANIP6Connection_DefaultGateway'}

    # brings-up network interface
    IFNAME=$ifname IPADDR=$ipaddr PREFIX=$prefix/$prefixlen ROUTERS=$routers SERVERS=''
    base_call_scripts 'ip-up6-static'

  elif [ "$iptype" = 'SLAAC+DHCP' -o "$iptype" = 'DHCP' ]; then

    # Yes this is really stupid, but if an interface has no ipv6 addr
    # then I can't enable ipv6 ... yet this ipv6 addr won't be assigned
    # so call it twice.
    add_ipv6_linklocal $ifname
    sysctl -w net.ipv6.conf.$ifname.disable_ipv6=0 2>&1 >/dev/null
    add_ipv6_linklocal $ifname
    get_ipv6_linklocal $ifname > $WAND/$WANID/ip6/lladdr

    # Used to construct command line or configuration file
    . /etc/bewan/lib/dhcp6client
    dhcp6client_config_wan

    local IFNAME=$ifname
    base_call_initd 'dhcp6client'

  elif [ "$iptype" = '6rd' ]; then
    base_call_initd '6rd'
  fi
}

main_wanip6() {
  eval $PUSH_ARG

  [ ! -d $DHCP6CLIENTD ] && mkdir -p $DHCP6CLIENTD

  check_wanip6
  base_log "$INITD/wanip6 $ARG $WANID" debug

  case $ARG in
  stop)
    stop_wanip6
    ;;
  start)
    start_wanip6
    ;;
  restart)
    stop_wanip6
    start_wanip6
   ;;
  esac
}

main_wanip6
