#!/bin/sh
# /etc/bewan/scripts/ip-up6-autoconf
# called when autoconfd thinks that we gained IPv6 connectivity
# Kernel configures default route and in full autoconf mode, 
# it also adds an IPv6 address that we can intercept here.

# Environnement variables:

#  IFNAME:  interface name
#  IPADDR:  IP address
#  PREFIX:  interface prefix
#  ROUTERS: gateways
#  RADNS:   DNS servers received in the RA

. /etc/bewan/scripts/globals
. /etc/bewan/lib/base

PREFIX="${PREFIX:-}"
prefixlen=128
[ "$PREFIX" != "" ] && prefixlen=${PREFIX##*/}

if [ -n "${IPADDR:-}" ]; then
  base_log "$SCRIPTD/ip-up6-autoconf $IFNAME $IPADDR/$prefixlen gw $ROUTERS dns $RADNS" debug
else
  base_log "$SCRIPTD/ip-up6-autoconf $IFNAME gw $ROUTERS dns $RADNS" debug
fi

# Take wan-up-down mutex
base_enter_critical 'wan-up-down'

# Get config parameters after taking lock
base_call_initd 'setparam'

touch "$INTFD/$IFNAME/autoconf-up6"

# LAN network interface is up

if [ -f "$INTFD/$IFNAME/lanid" ]; then
  LANID=`cat $INTFD/$IFNAME/lanid`
  base_call_scripts 'ip-up6-lan'

# autoconf client is up on WAN side
elif [ -f "$INTFD/$IFNAME/wanid" ]; then
  WANID=`cat $INTFD/$IFNAME/wanid`
  IPREMOTE=''
  base_call_scripts 'ip-up6'
fi

# Release wan-up-down mutex
base_exit_critical 'wan-up-down'
